<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- myBatis에서는 현재 xml 문서가 Mapper의 역할을 한다는 정의와 
	Mapper 태그의 문법을 정의하기위한 DTD 정보를 요구함
	Mapper 문서에서는 반드시 Mapper를 표현하는 dtd 정보를 표현해야 함 -->

<!-- 아래 mapper에서 구현되는 기능은  ProductDAO 추상메소드로 한정 됨-->
<mapper namespace="kr.bluenyang.practice.springbootex.shop.dao.ProductDAO">
    <!-- 전체 상품 조회 : select -->
    <!-- 태그 관련 속성 : id= 태그 고유 식별자(id가 추상메소드 명과 동일해야 함)
                          parameterType=쿼리에 전달할 파라미터 객체의 타입을 지정
                          resultType=반환결과가 필요한 경우 자바 객체의 타입 지정
                          resultMap=결과를 매핑하기위한 외부 결과 맵 참조(개발자가 구성해야 함)
                          statementType= stmt 객체 유형 지정(기본값 prepared)
     -->
    <!-- resultMap 구성 : 반환되는 rs의 컬럼과 저장해야하는 vo 클래스의 필드명을 매핑하는 역할 -->
    <resultMap id="prdResult" type="kr.bluenyang.practice.springbootex.shop.model.ProductVO">
        <result property="prdNo" column="prd_no"/>
        <result property="prdName" column="prd_name"/>
        <result property="prdPrice" column="prd_price"/>
        <result property="prdCompany" column="prd_company"/>
        <result property="prdStock" column="prd_stock"/>
        <result property="prdDesc" column="prd_desc"/>
        <result property="prdImg" column="prd_img"/>
        <result property="ctgId" column="ctg_id"/>
    </resultMap>

    <!-- <select id="listAllProduct" resultMap="prdResult"> -->
    <!--     SELECT * FROM product ORDER BY prdNo -->
    <!-- </select> -->
    <select id="listAllProduct" resultMap="prdResult">
        SELECT * FROM ex_product ORDER BY prd_no
    </select>
    <!-- 변수자리에 사용할 수 있는 기호 : #{필드명/변수명}, ${필드명/변수명} -->
    <!-- #{} : preparedStatement의 ? -->
    <!-- ${} : statement의 변수 -->
    <insert id="insertProduct" parameterType="kr.bluenyang.practice.springbootex.shop.model.ProductVO">
        INSERT INTO ex_product (prd_no, prd_name, prd_price, prd_company, prd_stock, prd_desc, prd_img, ctg_id)
        VALUES (#{prdNo}, #{prdName}, #{prdPrice},#{prdCompany}, #{prdStock}, #{prdDesc}, #{prdImg}, #{ctgId})
    </insert>

    <!-- 상품 상세정보 조회 -->
    <select id="detailViewProduct" parameterType="string" resultMap="prdResult">
        SELECT * FROM ex_product WHERE prd_no=#{prdNo}
    </select>


    <!-- 상품 정보 수정 -->
    <update id="updateProduct" parameterType="kr.bluenyang.practice.springbootex.shop.model.ProductVO">
        UPDATE ex_product SET prd_name=#{prdName}, prd_price=#{prdPrice}, prd_company=#{prdCompany},
        prd_stock=#{prdStock}, prd_desc=#{prdDesc}, prd_img=#{prdImg}, ctg_id=#{ctgId}
        WHERE prd_no=#{prdNo}
    </update>

    <!-- 상품 정보 삭제 -->
    <delete id="deleteProduct" parameterType="string">
        DELETE FROM ex_product WHERE prd_no=#{prdNo}
    </delete>

    <!-- 상품 번호 중복 확인 -->
    <select id="prdNoCheck" resultType="string" parameterType="string">
        SELECT prd_no FROM ex_product WHERE prd_no=#{prdNo}
    </select>

    <!-- 상품 검색
         검색기준 : type:prdName, type:prdCompany
             if 문을 표현하는 mybatis 태그 <choose><when>
         검색어 : keyword:사용자입력값
    -->
    <select id="productSearch" parameterType="hashmap" resultMap="prdResult">
        SELECT * FROM ex_product WHERE
        <choose>
            <when test="type != null and type.equals('prdName')">
                prd_name LIKE '%'||#{keyword}||'%'
            </when>
            <when test="type != null and type.equals('prdCompany')">
                prd_company LIKE '%'||#{keyword}||'%'
            </when>
        </choose>
    </select>

    <select id="ctgListProduct" parameterType="string" resultMap="prdResult">
        SELECT * FROM ex_product WHERE ctg_id=#{ctgId} ORDER BY prd_no
    </select>
</mapper>


























	